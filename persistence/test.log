[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for tournament:persistence:jar:1.0
[WARNING] 'groupId' contains an expression but should be a constant. @ ${tournament.groupId}:persistence:${tournament.version}, D:\MyProjects\GitHub\Tournament\persistence\pom.xml, line 10, column 10
[WARNING] 'version' contains an expression but should be a constant. @ ${tournament.groupId}:persistence:${tournament.version}, D:\MyProjects\GitHub\Tournament\persistence\pom.xml, line 13, column 10
[WARNING] 'groupId' contains an expression but should be a constant. @ ${tournament.groupId}:tournament:${tournament.version}, D:\MyProjects\GitHub\Tournament\pom.xml, line 5, column 10
[WARNING] 'version' contains an expression but should be a constant. @ ${tournament.groupId}:tournament:${tournament.version}, D:\MyProjects\GitHub\Tournament\pom.xml, line 7, column 10
[WARNING] The expression ${artifactId} is deprecated. Please use ${project.artifactId} instead.
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building persistence 1.0
[INFO] ------------------------------------------------------------------------
[WARNING] The artifact dbunit:dbunit:jar:2.2 has been relocated to org.dbunit:dbunit:jar:2.2
[INFO] 
[INFO] --- maven-resources-plugin:2.5:resources (default-resources) @ persistence ---
[debug] execute contextualize
[WARNING] Using platform encoding (Cp1251 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 5 resources
[INFO] 
[INFO] --- maven-compiler-plugin:2.3.2:compile (default-compile) @ persistence ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.5:testResources (default-testResources) @ persistence ---
[debug] execute contextualize
[WARNING] Using platform encoding (Cp1251 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 4 resources
[INFO] 
[INFO] --- maven-compiler-plugin:2.3.2:testCompile (default-testCompile) @ persistence ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.10:test (default-test) @ persistence ---
[INFO] Surefire report directory: D:\MyProjects\GitHub\Tournament\persistence\target\surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running com.taky.tournament.dao.PlayerRepositoryImplTest
19:19:35,728 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback.groovy]
19:19:35,729 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback-test.xml] at [file:/D:/MyProjects/GitHub/Tournament/persistence/target/test-classes/logback-test.xml]
19:19:35,964 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - debug attribute not set
19:19:35,988 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.FileAppender]
19:19:35,993 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [HibernateOut]
19:19:36,036 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
19:19:36,114 |-INFO in ch.qos.logback.core.FileAppender[HibernateOut] - File property is set to [hibernate.out.log]
19:19:36,117 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
19:19:36,120 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [STDOUT]
19:19:36,127 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
19:19:36,127 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [com.taky] to DEBUG
19:19:36,128 |-ERROR in ch.qos.logback.core.joran.action.AppenderRefAction - Could not find an appender named [TournamentOut]. Did you define it below instead of above in the configuration file?
19:19:36,128 |-ERROR in ch.qos.logback.core.joran.action.AppenderRefAction - See http://logback.qos.ch/codes.html#appender_order for more details.
19:19:36,128 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.hibernate] to DEBUG
19:19:36,128 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [HibernateOut] to Logger[org.hibernate]
19:19:36,129 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to ERROR
19:19:36,129 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[ROOT]
19:19:36,129 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration.
19:19:36,131 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@1a418a3 - Registering current configuration as safe fallback point

Sep 30, 2012 7:19:36 PM org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [com/taky/tournament/dao/spring-test-dao.xml]
Sep 30, 2012 7:19:36 PM org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [spring/spring-hibernate.xml]
Sep 30, 2012 7:19:36 PM org.springframework.context.support.AbstractApplicationContext prepareRefresh
INFO: Refreshing org.springframework.context.support.GenericApplicationContext@161305f: startup date [Sun Sep 30 19:19:36 EEST 2012]; root of context hierarchy
Sep 30, 2012 7:19:37 PM org.springframework.beans.factory.support.DefaultListableBeanFactory preInstantiateSingletons
INFO: Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@caf446: defining beans [playerRepositoryImpl,tournamentRepositoryImpl,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,dataSource,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,hibernateSessionFactory,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
Sep 30, 2012 7:19:37 PM org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory initDatabase
INFO: Creating embedded database 'dataSource'
Adding type registration boolean -> org.hibernate.type.BooleanType@80a576
Adding type registration boolean -> org.hibernate.type.BooleanType@80a576
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@80a576
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1e0042f
Adding type registration true_false -> org.hibernate.type.TrueFalseType@186bc70
Adding type registration yes_no -> org.hibernate.type.YesNoType@ab1d1b
Adding type registration byte -> org.hibernate.type.ByteType@12c1685
Adding type registration byte -> org.hibernate.type.ByteType@12c1685
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@12c1685
Adding type registration character -> org.hibernate.type.CharacterType@bd5fa1
Adding type registration char -> org.hibernate.type.CharacterType@bd5fa1
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@bd5fa1
Adding type registration short -> org.hibernate.type.ShortType@cd504e
Adding type registration short -> org.hibernate.type.ShortType@cd504e
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@cd504e
Adding type registration integer -> org.hibernate.type.IntegerType@16aa19
Adding type registration int -> org.hibernate.type.IntegerType@16aa19
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@16aa19
Adding type registration long -> org.hibernate.type.LongType@602764
Adding type registration long -> org.hibernate.type.LongType@602764
Adding type registration java.lang.Long -> org.hibernate.type.LongType@602764
Adding type registration float -> org.hibernate.type.FloatType@7013d1
Adding type registration float -> org.hibernate.type.FloatType@7013d1
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7013d1
Adding type registration double -> org.hibernate.type.DoubleType@1a64a63
Adding type registration double -> org.hibernate.type.DoubleType@1a64a63
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1a64a63
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2678f9
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2678f9
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1191d29
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1191d29
Adding type registration string -> org.hibernate.type.StringType@192cf37
Adding type registration java.lang.String -> org.hibernate.type.StringType@192cf37
Adding type registration url -> org.hibernate.type.UrlType@dc711
Adding type registration java.net.URL -> org.hibernate.type.UrlType@dc711
Adding type registration date -> org.hibernate.type.DateType@d47289
Adding type registration java.sql.Date -> org.hibernate.type.DateType@d47289
Adding type registration time -> org.hibernate.type.TimeType@2bcbb9
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2bcbb9
Adding type registration timestamp -> org.hibernate.type.TimestampType@c4a2da
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@c4a2da
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@c4a2da
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1c07801
Adding type registration calendar -> org.hibernate.type.CalendarType@1b2f2f8
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1b2f2f8
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1b2f2f8
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@19f768f
Adding type registration locale -> org.hibernate.type.LocaleType@3b5ba
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3b5ba
Adding type registration currency -> org.hibernate.type.CurrencyType@14b74fd
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@14b74fd
Adding type registration timezone -> org.hibernate.type.TimeZoneType@707aca
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@707aca
Adding type registration class -> org.hibernate.type.ClassType@4c885c
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4c885c
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7963ac
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7963ac
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@fbbb20
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1a4792f
Adding type registration binary -> org.hibernate.type.BinaryType@6006d
Adding type registration byte[] -> org.hibernate.type.BinaryType@6006d
Adding type registration [B -> org.hibernate.type.BinaryType@6006d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@a80e05
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@a80e05
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@a80e05
Adding type registration image -> org.hibernate.type.ImageType@1955fe1
Adding type registration characters -> org.hibernate.type.CharArrayType@36d59a
Adding type registration char[] -> org.hibernate.type.CharArrayType@36d59a
Adding type registration [C -> org.hibernate.type.CharArrayType@36d59a
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@11ee981
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@11ee981
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@11ee981
Adding type registration text -> org.hibernate.type.TextType@acdd8a
Adding type registration blob -> org.hibernate.type.BlobType@6745d6
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6745d6
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@53c84a
Adding type registration clob -> org.hibernate.type.ClobType@b4fdc
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b4fdc
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@15b81bd
Adding type registration serializable -> org.hibernate.type.SerializableType@e8bd13
Adding type registration object -> org.hibernate.type.ObjectType@117d1c5
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@117d1c5
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1bf99d8
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@d6c32
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@13a6671
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@11bb79c
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@b36a83
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@115f21b
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1c9eaf8
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1615d6b
Hibernate Commons Annotations 3.2.0.Final
Hibernate 3.6.0.Final
loaded properties from resource hibernate.properties: {hibernate.connection.autocommit=true, hibernate.cache.provider_class=org.hibernate.cache.NoCacheProvider, hibernate.dialect=org.hibernate.dialect.H2Dialect, hibernate.bytecode.use_reflection_optimizer=false, hibernate.hbm2ddl.auto=create, hibernate.transaction.flush_before_completion=true, hibernate.show.sql=true}
Bytecode provider name : javassist
using JDK 1.4 java.sql.Timestamp handling
Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.taky.tournament.entity.Player
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name Player
Bind entity com.taky.tournament.entity.Player on table Player
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Player), mappingColumn=PLAYER_ID, insertable=true, updatable=true, unique=false}
binding property id with lazy=false
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Player), mappingColumn=NAME, insertable=true, updatable=true, unique=false}
binding property name with lazy=false
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Player), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Player), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Player), mappingColumn=tournaments_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='tournaments_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='players'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='players'}
Collection role: com.taky.tournament.entity.Player.tournaments
Building property tournaments
Binding entity from annotated class: com.taky.tournament.entity.Tournament
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name Tournament
Bind entity com.taky.tournament.entity.Tournament on table Tournament
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Tournament), mappingColumn=TOURNAMENT_ID, insertable=true, updatable=true, unique=false}
binding property id with lazy=false
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Tournament), mappingColumn=NAME, insertable=true, updatable=true, unique=false}
binding property name with lazy=false
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Tournament), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Tournament), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Tournament), mappingColumn=players_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='players_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='TOURNAMENT_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='PLAYER_ID', referencedColumn='', mappedBy=''}
Collection role: com.taky.tournament.entity.Tournament.players
Building property players
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Tournament), mappingColumn=tournamentEndDate, insertable=true, updatable=true, unique=false}
binding property tournamentEndDate with lazy=false
building SimpleValue for tournamentEndDate
Building property tournamentEndDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Tournament), mappingColumn=tournamentStartDate, insertable=true, updatable=true, unique=false}
binding property tournamentStartDate with lazy=false
building SimpleValue for tournamentStartDate
Building property tournamentStartDate
Setting SimpleValue typeName for id
Setting SimpleValue typeName for name
Setting SimpleValue typeName for id
Setting SimpleValue typeName for name
Setting SimpleValue typeName for tournamentEndDate
Setting SimpleValue typeName for tournamentStartDate
processing fk mappings (*ToOne and JoinedSubclass)
processing extends queue
processing extends queue
processing collection mappings
Second pass for collection: com.taky.tournament.entity.Tournament.players
Binding as ManyToMany: com.taky.tournament.entity.Tournament.players
Mapped collection key: TOURNAMENT_ID, element: PLAYER_ID
Second pass for collection: com.taky.tournament.entity.Player.tournaments
Binding as ManyToMany: com.taky.tournament.entity.Player.tournaments
Retrieving property com.taky.tournament.entity.Tournament.players
Mapped collection key: PLAYER_ID, element: TOURNAMENT_ID
processing native query and ResultSetMapping mappings
processing association property references
processing foreign key constraints
resolving reference to class: com.taky.tournament.entity.Tournament
resolving reference to class: com.taky.tournament.entity.Player
Hibernate Validator not found: ignoring
Sep 30, 2012 7:19:37 PM org.springframework.orm.hibernate3.LocalSessionFactoryBean buildSessionFactory
INFO: Building new Hibernate SessionFactory
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
processing fk mappings (*ToOne and JoinedSubclass)
processing extends queue
processing extends queue
processing collection mappings
processing native query and ResultSetMapping mappings
processing association property references
processing foreign key constraints
resolving reference to class: com.taky.tournament.entity.Tournament
resolving reference to class: com.taky.tournament.entity.Player
Legacy Validator not present in classpath, ignoring event listener registration
Search not present in classpath, ignoring event listener registration.
Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
Database ->
       name : H2
    version : 1.3.167 (2012-05-23)
      major : 1
      minor : 3
Driver ->
       name : H2 JDBC Driver
    version : 1.3.167 (2012-05-23)
      major : 1
      minor : 3
Using dialect: org.hibernate.dialect.H2Dialect
Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
Connection release mode: auto
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: disabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
building session factory
Statistics initialized [enabled=false]}
Session factory constructed with filter configurations : {}
instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.cache.provider_class=${hibernate.cache.provider_class}, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_02\jre\bin, java.vm.version=22.0-b10, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\MyProjects\GitHub\Tournament\persistence, java.runtime.version=1.7.0_02-b13, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, basedir=D:\MyProjects\GitHub\Tournament\persistence, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_02\jre\lib\endorsed, os.arch=x86, surefire.real.class.path=D:\MyProjects\GitHub\Tournament\persistence\target\surefire\surefirebooter2798920650936526208.jar, hibernate.connection.autocommit=true, java.io.tmpdir=C:\Users\Taky\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1251, java.library.path=C:\Program Files\Java\jdk1.7.0_02\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\AMD APP\bin\x86;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.7.0_02\bin;D:\Development\build\apache-ant-1.8.2\bin;d:\Development\build\apache-maven-3.0.4\bin\;C:\Program Files\QuickTime\QTSystem\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\scala\\bin;C:\Program Files\Google\google_appengine\;., surefire.test.class.path=D:\MyProjects\GitHub\Tournament\persistence\target\test-classes;D:\MyProjects\GitHub\Tournament\persistence\target\classes;D:\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;D:\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;D:\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;D:\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;D:\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;D:\.m2\repository\org\hibernate\hibernate-entitymanager\3.6.0.Final\hibernate-entitymanager-3.6.0.Final.jar;D:\.m2\repository\cglib\cglib\2.2\cglib-2.2.jar;D:\.m2\repository\asm\asm\3.1\asm-3.1.jar;D:\.m2\repository\junit\junit\4.8.1\junit-4.8.1.jar;D:\.m2\repository\com\h2database\h2\1.3.167\h2-1.3.167.jar;D:\.m2\repository\org\dbunit\dbunit\2.2\dbunit-2.2.jar;D:\.m2\repository\junit-addons\junit-addons\1.4\junit-addons-1.4.jar;D:\.m2\repository\xerces\xercesImpl\2.6.2\xercesImpl-2.6.2.jar;D:\.m2\repository\xerces\xmlParserAPIs\2.6.2\xmlParserAPIs-2.6.2.jar;D:\.m2\repository\poi\poi\2.5.1-final-20040804\poi-2.5.1-final-20040804.jar;D:\.m2\repository\commons-lang\commons-lang\2.1\commons-lang-2.1.jar;D:\.m2\repository\commons-logging\commons-logging\1.0.4\commons-logging-1.0.4.jar;D:\.m2\repository\org\springframework\spring-core\3.1.1.RELEASE\spring-core-3.1.1.RELEASE.jar;D:\.m2\repository\org\springframework\spring-asm\3.1.1.RELEASE\spring-asm-3.1.1.RELEASE.jar;D:\.m2\repository\org\springframework\spring-beans\3.1.1.RELEASE\spring-beans-3.1.1.RELEASE.jar;D:\.m2\repository\org\springframework\spring-aop\3.1.1.RELEASE\spring-aop-3.1.1.RELEASE.jar;D:\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\.m2\repository\org\springframework\spring-context\3.1.1.RELEASE\spring-context-3.1.1.RELEASE.jar;D:\.m2\repository\org\springframework\spring-expression\3.1.1.RELEASE\spring-expression-3.1.1.RELEASE.jar;D:\.m2\repository\org\springframework\spring-orm\3.1.1.RELEASE\spring-orm-3.1.1.RELEASE.jar;D:\.m2\repository\org\springframework\spring-jdbc\3.1.1.RELEASE\spring-jdbc-3.1.1.RELEASE.jar;D:\.m2\repository\org\springframework\spring-tx\3.1.1.RELEASE\spring-tx-3.1.1.RELEASE.jar;D:\.m2\repository\org\springframework\spring-web\3.1.1.RELEASE\spring-web-3.1.1.RELEASE.jar;D:\.m2\repository\org\springframework\spring-webmvc\3.1.1.RELEASE\spring-webmvc-3.1.1.RELEASE.jar;D:\.m2\repository\org\springframework\spring-context-support\3.1.1.RELEASE\spring-context-support-3.1.1.RELEASE.jar;D:\.m2\repository\org\springframework\spring-test\3.1.1.RELEASE\spring-test-3.1.1.RELEASE.jar;D:\.m2\repository\ch\qos\logback\logback-classic\1.0.3\logback-classic-1.0.3.jar;D:\.m2\repository\ch\qos\logback\logback-core\1.0.3\logback-core-1.0.3.jar;D:\.m2\repository\com\google\guava\guava\11.0.2\guava-11.0.2.jar;D:\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot Client Compiler, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.1, hibernate.show.sql=true, user.home=C:\Users\Taky, user.timezone=Europe/Helsinki, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.7, file.encoding=Cp1251, user.name=Taky, java.class.path=D:\MyProjects\GitHub\Tournament\persistence\target\test-classes;D:\MyProjects\GitHub\Tournament\persistence\target\classes;D:\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;D:\.m2\repository\org\hibernate\hibernate-core\3.6.0.Final\hibernate-core-3.6.0.Final.jar;D:\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;D:\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;D:\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;D:\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;D:\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;D:\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;D:\.m2\repository\org\hibernate\hibernate-entitymanager\3.6.0.Final\hibernate-entitymanager-3.6.0.Final.jar;D:\.m2\repository\cglib\cglib\2.2\cglib-2.2.jar;D:\.m2\repository\asm\asm\3.1\asm-3.1.jar;D:\.m2\repository\junit\junit\4.8.1\junit-4.8.1.jar;D:\.m2\repository\com\h2database\h2\1.3.167\h2-1.3.167.jar;D:\.m2\repository\org\dbunit\dbunit\2.2\dbunit-2.2.jar;D:\.m2\repository\junit-addons\junit-addons\1.4\junit-addons-1.4.jar;D:\.m2\repository\xerces\xercesImpl\2.6.2\xercesImpl-2.6.2.jar;D:\.m2\repository\xerces\xmlParserAPIs\2.6.2\xmlParserAPIs-2.6.2.jar;D:\.m2\repository\poi\poi\2.5.1-final-20040804\poi-2.5.1-final-20040804.jar;D:\.m2\repository\commons-lang\commons-lang\2.1\commons-lang-2.1.jar;D:\.m2\repository\commons-logging\commons-logging\1.0.4\commons-logging-1.0.4.jar;D:\.m2\repository\org\springframework\spring-core\3.1.1.RELEASE\spring-core-3.1.1.RELEASE.jar;D:\.m2\repository\org\springframework\spring-asm\3.1.1.RELEASE\spring-asm-3.1.1.RELEASE.jar;D:\.m2\repository\org\springframework\spring-beans\3.1.1.RELEASE\spring-beans-3.1.1.RELEASE.jar;D:\.m2\repository\org\springframework\spring-aop\3.1.1.RELEASE\spring-aop-3.1.1.RELEASE.jar;D:\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\.m2\repository\org\springframework\spring-context\3.1.1.RELEASE\spring-context-3.1.1.RELEASE.jar;D:\.m2\repository\org\springframework\spring-expression\3.1.1.RELEASE\spring-expression-3.1.1.RELEASE.jar;D:\.m2\repository\org\springframework\spring-orm\3.1.1.RELEASE\spring-orm-3.1.1.RELEASE.jar;D:\.m2\repository\org\springframework\spring-jdbc\3.1.1.RELEASE\spring-jdbc-3.1.1.RELEASE.jar;D:\.m2\repository\org\springframework\spring-tx\3.1.1.RELEASE\spring-tx-3.1.1.RELEASE.jar;D:\.m2\repository\org\springframework\spring-web\3.1.1.RELEASE\spring-web-3.1.1.RELEASE.jar;D:\.m2\repository\org\springframework\spring-webmvc\3.1.1.RELEASE\spring-webmvc-3.1.1.RELEASE.jar;D:\.m2\repository\org\springframework\spring-context-support\3.1.1.RELEASE\spring-context-support-3.1.1.RELEASE.jar;D:\.m2\repository\org\springframework\spring-test\3.1.1.RELEASE\spring-test-3.1.1.RELEASE.jar;D:\.m2\repository\ch\qos\logback\logback-classic\1.0.3\logback-classic-1.0.3.jar;D:\.m2\repository\ch\qos\logback\logback-core\1.0.3\logback-core-1.0.3.jar;D:\.m2\repository\com\google\guava\guava\11.0.2\guava-11.0.2.jar;D:\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;, hibernate.cache.dialect=${hibernate.dialect}, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=${hibernate.show.sql}, java.vm.specification.version=1.7, sun.arch.data.model=32, java.home=C:\Program Files\Java\jdk1.7.0_02\jre, sun.java.command=D:\MyProjects\GitHub\Tournament\persistence\target\surefire\surefirebooter2798920650936526208.jar D:\MyProjects\GitHub\Tournament\persistence\target\surefire\surefire3580666514725133037tmp D:\MyProjects\GitHub\Tournament\persistence\target\surefire\surefire3814863516856665145tmp, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.7.0_02, hibernate.transaction.flush_before_completion=${hibernate.transaction.flush_before_completion}, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_02\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_02\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_02\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_02\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_02\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_02\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_02\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_02\jre\classes, java.vendor=Oracle Corporation, localRepository=D:\.m2\repository, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=${hibernate.hbm2ddl.auto}, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, connection.autocommit=${hibernate.connection.autocommit}, sun.desktop=windows, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}
Setting dialect [org.hibernate.dialect.H2Dialect]
Setting dialect [org.hibernate.dialect.H2Dialect]
Static SQL for entity: com.taky.tournament.entity.Tournament
 Version select: select TOURNAMENT_ID from Tournament where TOURNAMENT_ID =?
 Snapshot select: select tournament_.TOURNAMENT_ID, tournament_.NAME as NAME1_, tournament_.tournamentEndDate as tourname3_1_, tournament_.tournamentStartDate as tourname4_1_ from Tournament tournament_ where tournament_.TOURNAMENT_ID=?
 Insert 0: insert into Tournament (NAME, tournamentEndDate, tournamentStartDate, TOURNAMENT_ID) values (?, ?, ?, ?)
 Update 0: update Tournament set NAME=?, tournamentEndDate=?, tournamentStartDate=? where TOURNAMENT_ID=?
 Delete 0: delete from Tournament where TOURNAMENT_ID=?
 Identity insert: insert into Tournament (TOURNAMENT_ID, NAME, tournamentEndDate, tournamentStartDate) values (null, ?, ?, ?)
Static SQL for entity: com.taky.tournament.entity.Player
 Version select: select PLAYER_ID from Player where PLAYER_ID =?
 Snapshot select: select player_.PLAYER_ID, player_.NAME as NAME0_ from Player player_ where player_.PLAYER_ID=?
 Insert 0: insert into Player (NAME, PLAYER_ID) values (?, ?)
 Update 0: update Player set NAME=? where PLAYER_ID=?
 Delete 0: delete from Player where PLAYER_ID=?
 Identity insert: insert into Player (PLAYER_ID, NAME) values (null, ?)
Static SQL for collection: com.taky.tournament.entity.Tournament.players
 Row insert: insert into TOURNAMENT_PLAYER (TOURNAMENT_ID, PLAYER_ID) values (?, ?)
 Row update: update TOURNAMENT_PLAYER set PLAYER_ID=? where TOURNAMENT_ID=? and PLAYER_ID=?
 Row delete: delete from TOURNAMENT_PLAYER where TOURNAMENT_ID=? and PLAYER_ID=?
 One-shot delete: delete from TOURNAMENT_PLAYER where TOURNAMENT_ID=?
Static SQL for collection: com.taky.tournament.entity.Player.tournaments
 Row insert: insert into TOURNAMENT_PLAYER (PLAYER_ID, TOURNAMENT_ID) values (?, ?)
 Row update: update TOURNAMENT_PLAYER set TOURNAMENT_ID=? where PLAYER_ID=? and TOURNAMENT_ID=?
 Row delete: delete from TOURNAMENT_PLAYER where PLAYER_ID=? and TOURNAMENT_ID=?
 One-shot delete: delete from TOURNAMENT_PLAYER where PLAYER_ID=?
Static select for entity com.taky.tournament.entity.Tournament [NONE]: select tournament0_.TOURNAMENT_ID as TOURNAMENT1_1_0_, tournament0_.NAME as NAME1_0_, tournament0_.tournamentEndDate as tourname3_1_0_, tournament0_.tournamentStartDate as tourname4_1_0_ from Tournament tournament0_ where tournament0_.TOURNAMENT_ID=?
Static select for entity com.taky.tournament.entity.Tournament [READ]: select tournament0_.TOURNAMENT_ID as TOURNAMENT1_1_0_, tournament0_.NAME as NAME1_0_, tournament0_.tournamentEndDate as tourname3_1_0_, tournament0_.tournamentStartDate as tourname4_1_0_ from Tournament tournament0_ where tournament0_.TOURNAMENT_ID=?
Static select for entity com.taky.tournament.entity.Tournament [UPGRADE]: select tournament0_.TOURNAMENT_ID as TOURNAMENT1_1_0_, tournament0_.NAME as NAME1_0_, tournament0_.tournamentEndDate as tourname3_1_0_, tournament0_.tournamentStartDate as tourname4_1_0_ from Tournament tournament0_ where tournament0_.TOURNAMENT_ID=? for update
Static select for entity com.taky.tournament.entity.Tournament [UPGRADE_NOWAIT]: select tournament0_.TOURNAMENT_ID as TOURNAMENT1_1_0_, tournament0_.NAME as NAME1_0_, tournament0_.tournamentEndDate as tourname3_1_0_, tournament0_.tournamentStartDate as tourname4_1_0_ from Tournament tournament0_ where tournament0_.TOURNAMENT_ID=? for update
Static select for entity com.taky.tournament.entity.Tournament [FORCE]: select tournament0_.TOURNAMENT_ID as TOURNAMENT1_1_0_, tournament0_.NAME as NAME1_0_, tournament0_.tournamentEndDate as tourname3_1_0_, tournament0_.tournamentStartDate as tourname4_1_0_ from Tournament tournament0_ where tournament0_.TOURNAMENT_ID=? for update
Static select for entity com.taky.tournament.entity.Tournament [PESSIMISTIC_READ]: select tournament0_.TOURNAMENT_ID as TOURNAMENT1_1_0_, tournament0_.NAME as NAME1_0_, tournament0_.tournamentEndDate as tourname3_1_0_, tournament0_.tournamentStartDate as tourname4_1_0_ from Tournament tournament0_ where tournament0_.TOURNAMENT_ID=? for update
Static select for entity com.taky.tournament.entity.Tournament [PESSIMISTIC_WRITE]: select tournament0_.TOURNAMENT_ID as TOURNAMENT1_1_0_, tournament0_.NAME as NAME1_0_, tournament0_.tournamentEndDate as tourname3_1_0_, tournament0_.tournamentStartDate as tourname4_1_0_ from Tournament tournament0_ where tournament0_.TOURNAMENT_ID=? for update
Static select for entity com.taky.tournament.entity.Tournament [PESSIMISTIC_FORCE_INCREMENT]: select tournament0_.TOURNAMENT_ID as TOURNAMENT1_1_0_, tournament0_.NAME as NAME1_0_, tournament0_.tournamentEndDate as tourname3_1_0_, tournament0_.tournamentStartDate as tourname4_1_0_ from Tournament tournament0_ where tournament0_.TOURNAMENT_ID=? for update
Static select for entity com.taky.tournament.entity.Tournament [OPTIMISTIC]: select tournament0_.TOURNAMENT_ID as TOURNAMENT1_1_0_, tournament0_.NAME as NAME1_0_, tournament0_.tournamentEndDate as tourname3_1_0_, tournament0_.tournamentStartDate as tourname4_1_0_ from Tournament tournament0_ where tournament0_.TOURNAMENT_ID=?
Static select for entity com.taky.tournament.entity.Tournament [OPTIMISTIC_FORCE_INCREMENT]: select tournament0_.TOURNAMENT_ID as TOURNAMENT1_1_0_, tournament0_.NAME as NAME1_0_, tournament0_.tournamentEndDate as tourname3_1_0_, tournament0_.tournamentStartDate as tourname4_1_0_ from Tournament tournament0_ where tournament0_.TOURNAMENT_ID=?
Static select for action ACTION_MERGE on entity com.taky.tournament.entity.Tournament: select tournament0_.TOURNAMENT_ID as TOURNAMENT1_1_1_, tournament0_.NAME as NAME1_1_, tournament0_.tournamentEndDate as tourname3_1_1_, tournament0_.tournamentStartDate as tourname4_1_1_, players1_.TOURNAMENT_ID as TOURNAMENT1_1_3_, player2_.PLAYER_ID as PLAYER2_3_, player2_.PLAYER_ID as PLAYER1_0_0_, player2_.NAME as NAME0_0_ from Tournament tournament0_ left outer join TOURNAMENT_PLAYER players1_ on tournament0_.TOURNAMENT_ID=players1_.TOURNAMENT_ID left outer join Player player2_ on players1_.PLAYER_ID=player2_.PLAYER_ID where tournament0_.TOURNAMENT_ID=?
Static select for action ACTION_REFRESH on entity com.taky.tournament.entity.Tournament: select tournament0_.TOURNAMENT_ID as TOURNAMENT1_1_1_, tournament0_.NAME as NAME1_1_, tournament0_.tournamentEndDate as tourname3_1_1_, tournament0_.tournamentStartDate as tourname4_1_1_, players1_.TOURNAMENT_ID as TOURNAMENT1_1_3_, player2_.PLAYER_ID as PLAYER2_3_, player2_.PLAYER_ID as PLAYER1_0_0_, player2_.NAME as NAME0_0_ from Tournament tournament0_ left outer join TOURNAMENT_PLAYER players1_ on tournament0_.TOURNAMENT_ID=players1_.TOURNAMENT_ID left outer join Player player2_ on players1_.PLAYER_ID=player2_.PLAYER_ID where tournament0_.TOURNAMENT_ID=?
Static select for entity com.taky.tournament.entity.Player [NONE]: select player0_.PLAYER_ID as PLAYER1_0_0_, player0_.NAME as NAME0_0_ from Player player0_ where player0_.PLAYER_ID=?
Static select for entity com.taky.tournament.entity.Player [READ]: select player0_.PLAYER_ID as PLAYER1_0_0_, player0_.NAME as NAME0_0_ from Player player0_ where player0_.PLAYER_ID=?
Static select for entity com.taky.tournament.entity.Player [UPGRADE]: select player0_.PLAYER_ID as PLAYER1_0_0_, player0_.NAME as NAME0_0_ from Player player0_ where player0_.PLAYER_ID=? for update
Static select for entity com.taky.tournament.entity.Player [UPGRADE_NOWAIT]: select player0_.PLAYER_ID as PLAYER1_0_0_, player0_.NAME as NAME0_0_ from Player player0_ where player0_.PLAYER_ID=? for update
Static select for entity com.taky.tournament.entity.Player [FORCE]: select player0_.PLAYER_ID as PLAYER1_0_0_, player0_.NAME as NAME0_0_ from Player player0_ where player0_.PLAYER_ID=? for update
Static select for entity com.taky.tournament.entity.Player [PESSIMISTIC_READ]: select player0_.PLAYER_ID as PLAYER1_0_0_, player0_.NAME as NAME0_0_ from Player player0_ where player0_.PLAYER_ID=? for update
Static select for entity com.taky.tournament.entity.Player [PESSIMISTIC_WRITE]: select player0_.PLAYER_ID as PLAYER1_0_0_, player0_.NAME as NAME0_0_ from Player player0_ where player0_.PLAYER_ID=? for update
Static select for entity com.taky.tournament.entity.Player [PESSIMISTIC_FORCE_INCREMENT]: select player0_.PLAYER_ID as PLAYER1_0_0_, player0_.NAME as NAME0_0_ from Player player0_ where player0_.PLAYER_ID=? for update
Static select for entity com.taky.tournament.entity.Player [OPTIMISTIC]: select player0_.PLAYER_ID as PLAYER1_0_0_, player0_.NAME as NAME0_0_ from Player player0_ where player0_.PLAYER_ID=?
Static select for entity com.taky.tournament.entity.Player [OPTIMISTIC_FORCE_INCREMENT]: select player0_.PLAYER_ID as PLAYER1_0_0_, player0_.NAME as NAME0_0_ from Player player0_ where player0_.PLAYER_ID=?
Static select for action ACTION_MERGE on entity com.taky.tournament.entity.Player: select player0_.PLAYER_ID as PLAYER1_0_1_, player0_.NAME as NAME0_1_, tournament1_.PLAYER_ID as PLAYER2_0_3_, tournament2_.TOURNAMENT_ID as TOURNAMENT1_3_, tournament2_.TOURNAMENT_ID as TOURNAMENT1_1_0_, tournament2_.NAME as NAME1_0_, tournament2_.tournamentEndDate as tourname3_1_0_, tournament2_.tournamentStartDate as tourname4_1_0_ from Player player0_ left outer join TOURNAMENT_PLAYER tournament1_ on player0_.PLAYER_ID=tournament1_.PLAYER_ID left outer join Tournament tournament2_ on tournament1_.TOURNAMENT_ID=tournament2_.TOURNAMENT_ID where player0_.PLAYER_ID=?
Static select for action ACTION_REFRESH on entity com.taky.tournament.entity.Player: select player0_.PLAYER_ID as PLAYER1_0_1_, player0_.NAME as NAME0_1_, tournament1_.PLAYER_ID as PLAYER2_0_3_, tournament2_.TOURNAMENT_ID as TOURNAMENT1_3_, tournament2_.TOURNAMENT_ID as TOURNAMENT1_1_0_, tournament2_.NAME as NAME1_0_, tournament2_.tournamentEndDate as tourname3_1_0_, tournament2_.tournamentStartDate as tourname4_1_0_ from Player player0_ left outer join TOURNAMENT_PLAYER tournament1_ on player0_.PLAYER_ID=tournament1_.PLAYER_ID left outer join Tournament tournament2_ on tournament1_.TOURNAMENT_ID=tournament2_.TOURNAMENT_ID where player0_.PLAYER_ID=?
Static select for collection com.taky.tournament.entity.Player.tournaments: select tournament0_.PLAYER_ID as PLAYER2_0_1_, tournament0_.TOURNAMENT_ID as TOURNAMENT1_1_, tournament1_.TOURNAMENT_ID as TOURNAMENT1_1_0_, tournament1_.NAME as NAME1_0_, tournament1_.tournamentEndDate as tourname3_1_0_, tournament1_.tournamentStartDate as tourname4_1_0_ from TOURNAMENT_PLAYER tournament0_ inner join Tournament tournament1_ on tournament0_.TOURNAMENT_ID=tournament1_.TOURNAMENT_ID where tournament0_.PLAYER_ID=?
Static select for collection com.taky.tournament.entity.Tournament.players: select players0_.TOURNAMENT_ID as TOURNAMENT1_1_1_, players0_.PLAYER_ID as PLAYER2_1_, player1_.PLAYER_ID as PLAYER1_0_0_, player1_.NAME as NAME0_0_ from TOURNAMENT_PLAYER players0_ inner join Player player1_ on players0_.PLAYER_ID=player1_.PLAYER_ID where players0_.TOURNAMENT_ID=?
initializing class SessionFactoryObjectFactory
registered: f6bd4b8a-0e82-4c61-b431-56c7065dba5e (unnamed)
Not binding factory to JNDI, no JNDI name configured
instantiated session factory
Checking 0 named HQL queries
Checking 0 named SQL queries
Sep 30, 2012 7:19:38 PM org.springframework.orm.hibernate3.HibernateTransactionManager afterPropertiesSet
INFO: Using DataSource [org.springframework.jdbc.datasource.SimpleDriverDataSource@9675a1] of Hibernate SessionFactory for HibernateTransactionManager
opened session at timestamp: 13490219789
begin
opening JDBC connection
current autocommit status: true
disabling autocommit
Sep 30, 2012 7:19:39 PM org.springframework.test.context.transaction.TransactionalTestExecutionListener startNewTransaction
INFO: Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@1237e3f]; rollback [true]
executing identity-insert immediately
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into Player (PLAYER_ID, NAME) values (null, ?)
could not insert: [com.taky.tournament.entity.Player] [insert into Player (PLAYER_ID, NAME) values (null, ?)]
org.h2.jdbc.JdbcSQLException: Table "PLAYER" not found; SQL statement:
insert into Player (PLAYER_ID, NAME) values (null, ?) [42102-167]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.message.DbException.get(DbException.java:169) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.message.DbException.get(DbException.java:146) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.command.Parser.readTableOrView(Parser.java:4770) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.command.Parser.readTableOrView(Parser.java:4748) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.command.Parser.parseInsert(Parser.java:958) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.command.Parser.parsePrepared(Parser.java:375) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.command.Parser.parse(Parser.java:279) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.command.Parser.parse(Parser.java:251) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.command.Parser.prepareCommand(Parser.java:217) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.engine.Session.prepareLocal(Session.java:415) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.engine.Session.prepareCommand(Session.java:364) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1111) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:74) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:266) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:1041) ~[h2-1.3.167.jar:1.3.167]
	at org.hibernate.jdbc.AbstractBatcher.getPreparedStatement(AbstractBatcher.java:524) ~[hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.jdbc.AbstractBatcher.prepareStatement(AbstractBatcher.java:116) ~[hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.id.IdentityGenerator$GetGeneratedKeysDelegate.prepare(IdentityGenerator.java:90) ~[hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:54) ~[hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2327) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2834) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.action.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:71) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.engine.ActionQueue.execute(ActionQueue.java:273) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:320) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.event.def.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:203) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:129) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:210) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.event.def.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:56) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:195) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.event.def.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:50) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:93) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.impl.SessionImpl.fireSave(SessionImpl.java:713) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.impl.SessionImpl.save(SessionImpl.java:701) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.impl.SessionImpl.save(SessionImpl.java:697) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at com.taky.common.dao.GenericHibernateDao.create(GenericHibernateDao.java:35) [classes/:na]
	at com.taky.tournament.dao.AbstractRepositoryTest.testInsert(AbstractRepositoryTest.java:37) [test-classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.7.0_02]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[na:1.7.0_02]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_02]
	at java.lang.reflect.Method.invoke(Method.java:601) ~[na:1.7.0_02]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44) [junit-4.8.1.jar:na]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15) [junit-4.8.1.jar:na]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41) [junit-4.8.1.jar:na]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20) [junit-4.8.1.jar:na]
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74) [spring-test-3.1.1.RELEASE.jar:3.1.1.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83) [spring-test-3.1.1.RELEASE.jar:3.1.1.RELEASE]
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72) [spring-test-3.1.1.RELEASE.jar:3.1.1.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231) [spring-test-3.1.1.RELEASE.jar:3.1.1.RELEASE]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50) [junit-4.8.1.jar:na]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193) [junit-4.8.1.jar:na]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52) [junit-4.8.1.jar:na]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191) [junit-4.8.1.jar:na]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42) [junit-4.8.1.jar:na]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184) [junit-4.8.1.jar:na]
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) [spring-test-3.1.1.RELEASE.jar:3.1.1.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71) [spring-test-3.1.1.RELEASE.jar:3.1.1.RELEASE]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236) [junit-4.8.1.jar:na]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174) [spring-test-3.1.1.RELEASE.jar:3.1.1.RELEASE]
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53) [surefire-junit4-2.10.jar:2.10]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123) [surefire-junit4-2.10.jar:2.10]
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104) [surefire-junit4-2.10.jar:2.10]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.7.0_02]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[na:1.7.0_02]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_02]
	at java.lang.reflect.Method.invoke(Method.java:601) ~[na:1.7.0_02]
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164) [surefire-api-2.10.jar:2.10]
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110) [surefire-booter-2.10.jar:2.10]
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175) [surefire-booter-2.10.jar:2.10]
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107) [surefire-booter-2.10.jar:2.10]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68) [surefire-booter-2.10.jar:2.10]
SQL Error: 42102, SQLState: 42S02
Table "PLAYER" not found; SQL statement:
insert into Player (PLAYER_ID, NAME) values (null, ?) [42102-167]
rollback
re-enabling autocommit
rolled back JDBC Connection
transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
releasing JDBC connection [ (open PreparedStatements: 1, globally: 1) (open ResultSets: 0, globally: 0)]
transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
Sep 30, 2012 7:19:39 PM org.springframework.test.context.transaction.TransactionalTestExecutionListener endTransaction
INFO: Rolled back transaction after test execution for test context [[TestContext@1a03fef testClass = PlayerRepositoryImplTest, testInstance = com.taky.tournament.dao.PlayerRepositoryImplTest@1c591e1, testMethod = testInsert@AbstractRepositoryTest, testException = org.hibernate.exception.SQLGrammarException: could not insert: [com.taky.tournament.entity.Player], mergedContextConfiguration = [MergedContextConfiguration@1ec5f2d testClass = PlayerRepositoryImplTest, locations = '{classpath:/com/taky/tournament/dao/spring-test-dao.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 3.666 sec <<< FAILURE!
Running com.taky.tournament.dao.TournamentRepositoryImplTest
opened session at timestamp: 13490219790
begin
opening JDBC connection
current autocommit status: true
disabling autocommit
Sep 30, 2012 7:19:39 PM org.springframework.test.context.transaction.TransactionalTestExecutionListener startNewTransaction
INFO: Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@1237e3f]; rollback [true]
executing identity-insert immediately
about to open PreparedStatement (open PreparedStatements: 0, globally: 1)
insert into Tournament (TOURNAMENT_ID, NAME, tournamentEndDate, tournamentStartDate) values (null, ?, ?, ?)
could not insert: [com.taky.tournament.entity.Tournament] [insert into Tournament (TOURNAMENT_ID, NAME, tournamentEndDate, tournamentStartDate) values (null, ?, ?, ?)]
org.h2.jdbc.JdbcSQLException: Table "TOURNAMENT" not found; SQL statement:
insert into Tournament (TOURNAMENT_ID, NAME, tournamentEndDate, tournamentStartDate) values (null, ?, ?, ?) [42102-167]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.message.DbException.get(DbException.java:169) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.message.DbException.get(DbException.java:146) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.command.Parser.readTableOrView(Parser.java:4770) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.command.Parser.readTableOrView(Parser.java:4748) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.command.Parser.parseInsert(Parser.java:958) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.command.Parser.parsePrepared(Parser.java:375) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.command.Parser.parse(Parser.java:279) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.command.Parser.parse(Parser.java:251) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.command.Parser.prepareCommand(Parser.java:217) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.engine.Session.prepareLocal(Session.java:415) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.engine.Session.prepareCommand(Session.java:364) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1111) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:74) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:266) ~[h2-1.3.167.jar:1.3.167]
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:1041) ~[h2-1.3.167.jar:1.3.167]
	at org.hibernate.jdbc.AbstractBatcher.getPreparedStatement(AbstractBatcher.java:524) ~[hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.jdbc.AbstractBatcher.prepareStatement(AbstractBatcher.java:116) ~[hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.id.IdentityGenerator$GetGeneratedKeysDelegate.prepare(IdentityGenerator.java:90) ~[hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:54) ~[hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2327) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2834) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.action.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:71) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.engine.ActionQueue.execute(ActionQueue.java:273) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:320) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.event.def.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:203) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:129) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:210) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.event.def.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:56) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:195) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.event.def.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:50) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:93) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.impl.SessionImpl.fireSave(SessionImpl.java:713) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.impl.SessionImpl.save(SessionImpl.java:701) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at org.hibernate.impl.SessionImpl.save(SessionImpl.java:697) [hibernate-core-3.6.0.Final.jar:3.6.0.Final]
	at com.taky.common.dao.GenericHibernateDao.create(GenericHibernateDao.java:35) [classes/:na]
	at com.taky.tournament.dao.AbstractRepositoryTest.testInsert(AbstractRepositoryTest.java:37) [test-classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.7.0_02]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[na:1.7.0_02]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_02]
	at java.lang.reflect.Method.invoke(Method.java:601) ~[na:1.7.0_02]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44) [junit-4.8.1.jar:na]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15) [junit-4.8.1.jar:na]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41) [junit-4.8.1.jar:na]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20) [junit-4.8.1.jar:na]
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74) [spring-test-3.1.1.RELEASE.jar:3.1.1.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83) [spring-test-3.1.1.RELEASE.jar:3.1.1.RELEASE]
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72) [spring-test-3.1.1.RELEASE.jar:3.1.1.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231) [spring-test-3.1.1.RELEASE.jar:3.1.1.RELEASE]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50) [junit-4.8.1.jar:na]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193) [junit-4.8.1.jar:na]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52) [junit-4.8.1.jar:na]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191) [junit-4.8.1.jar:na]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42) [junit-4.8.1.jar:na]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184) [junit-4.8.1.jar:na]
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) [spring-test-3.1.1.RELEASE.jar:3.1.1.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71) [spring-test-3.1.1.RELEASE.jar:3.1.1.RELEASE]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236) [junit-4.8.1.jar:na]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174) [spring-test-3.1.1.RELEASE.jar:3.1.1.RELEASE]
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53) [surefire-junit4-2.10.jar:2.10]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123) [surefire-junit4-2.10.jar:2.10]
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104) [surefire-junit4-2.10.jar:2.10]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.7.0_02]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[na:1.7.0_02]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_02]
	at java.lang.reflect.Method.invoke(Method.java:601) ~[na:1.7.0_02]
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164) [surefire-api-2.10.jar:2.10]
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110) [surefire-booter-2.10.jar:2.10]
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175) [surefire-booter-2.10.jar:2.10]
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107) [surefire-booter-2.10.jar:2.10]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68) [surefire-booter-2.10.jar:2.10]
SQL Error: 42102, SQLState: 42S02
Table "TOURNAMENT" not found; SQL statement:
insert into Tournament (TOURNAMENT_ID, NAME, tournamentEndDate, tournamentStartDate) values (null, ?, ?, ?) [42102-167]
rollback
re-enabling autocommit
rolled back JDBC Connection
transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
releasing JDBC connection [ (open PreparedStatements: 1, globally: 2) (open ResultSets: 0, globally: 0)]
transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
Sep 30, 2012 7:19:39 PM org.springframework.test.context.transaction.TransactionalTestExecutionListener endTransaction
INFO: Rolled back transaction after test execution for test context [[TestContext@13c09a6 testClass = TournamentRepositoryImplTest, testInstance = com.taky.tournament.dao.TournamentRepositoryImplTest@9d92bf, testMethod = testInsert@AbstractRepositoryTest, testException = org.hibernate.exception.SQLGrammarException: could not insert: [com.taky.tournament.entity.Tournament], mergedContextConfiguration = [MergedContextConfiguration@10d60e4 testClass = TournamentRepositoryImplTest, locations = '{classpath:/com/taky/tournament/dao/spring-test-dao.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.01 sec <<< FAILURE!
closing

Results :

Tests in error: 
  testInsert(com.taky.tournament.dao.PlayerRepositoryImplTest): could not insert: [com.taky.tournament.entity.Player]
  testInsert(com.taky.tournament.dao.TournamentRepositoryImplTest): could not insert: [com.taky.tournament.entity.Tournament]

Tests run: 2, Failures: 0, Errors: 2, Skipped: 0

[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 5.937s
[INFO] Finished at: Sun Sep 30 19:19:39 EEST 2012
[INFO] Final Memory: 5M/15M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.10:test (default-test) on project persistence: There are test failures.
[ERROR] 
[ERROR] Please refer to D:\MyProjects\GitHub\Tournament\persistence\target\surefire-reports for the individual test results.
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
