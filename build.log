
D:\MyProjects\GitHub\Tournament>mvn clean install 
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for tournament:persistence:jar:1.0
[WARNING] 'groupId' contains an expression but should be a constant. @ ${tournament.groupId}:persistence:${tournament.version}, D:\MyProjects\GitHub\Tournament\persistence\pom.xml, line 10, column 10
[WARNING] 'version' contains an expression but should be a constant. @ ${tournament.groupId}:persistence:${tournament.version}, D:\MyProjects\GitHub\Tournament\persistence\pom.xml, line 13, column 10
[WARNING] 'groupId' contains an expression but should be a constant. @ ${tournament.groupId}:tournament:${tournament.version}, D:\MyProjects\GitHub\Tournament\pom.xml, line 5, column 10
[WARNING] 'version' contains an expression but should be a constant. @ ${tournament.groupId}:tournament:${tournament.version}, D:\MyProjects\GitHub\Tournament\pom.xml, line 7, column 10
[WARNING] The expression ${artifactId} is deprecated. Please use ${project.artifactId} instead.
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for tournament:service:jar:1.0
[WARNING] 'groupId' contains an expression but should be a constant. @ ${tournament.groupId}:service:${tournament.version}, D:\MyProjects\GitHub\Tournament\service\pom.xml, line 10, column 10
[WARNING] 'version' contains an expression but should be a constant. @ ${tournament.groupId}:service:${tournament.version}, D:\MyProjects\GitHub\Tournament\service\pom.xml, line 13, column 10
[WARNING] The expression ${artifactId} is deprecated. Please use ${project.artifactId} instead.
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for tournament:web:war:1.0
[WARNING] 'groupId' contains an expression but should be a constant. @ ${tournament.groupId}:web:${tournament.version}, D:\MyProjects\GitHub\Tournament\web\pom.xml, line 10, column 10
[WARNING] 'version' contains an expression but should be a constant. @ ${tournament.groupId}:web:${tournament.version}, D:\MyProjects\GitHub\Tournament\web\pom.xml, line 13, column 10
[WARNING] The expression ${artifactId} is deprecated. Please use ${project.artifactId} instead.
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for tournament:tournament:pom:1.0
[WARNING] 'groupId' contains an expression but should be a constant. @ ${tournament.groupId}:tournament:${tournament.version}, D:\MyProjects\GitHub\Tournament\pom.xml, line 5, column 10
[WARNING] 'version' contains an expression but should be a constant. @ ${tournament.groupId}:tournament:${tournament.version}, D:\MyProjects\GitHub\Tournament\pom.xml, line 7, column 10
[WARNING] The expression ${artifactId} is deprecated. Please use ${project.artifactId} instead.
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Build Order:
[INFO] 
[INFO] persistence
[INFO] service
[INFO] web
[INFO] tournament
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building persistence 1.0
[INFO] ------------------------------------------------------------------------
[WARNING] The artifact dbunit:dbunit:jar:2.2 has been relocated to org.dbunit:dbunit:jar:2.2
[INFO] 
[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @ persistence ---
[INFO] Deleting D:\MyProjects\GitHub\Tournament\persistence\target
[INFO] 
[INFO] --- maven-resources-plugin:2.5:resources (default-resources) @ persistence ---
[debug] execute contextualize
[WARNING] Using platform encoding (Cp1251 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 5 resources
[INFO] 
[INFO] --- maven-compiler-plugin:2.3.2:compile (default-compile) @ persistence ---
[WARNING] File encoding has not been set, using platform encoding Cp1251, i.e. build is platform dependent!
[INFO] Compiling 8 source files to D:\MyProjects\GitHub\Tournament\persistence\target\classes
[INFO] 
[INFO] --- maven-resources-plugin:2.5:testResources (default-testResources) @ persistence ---
[debug] execute contextualize
[WARNING] Using platform encoding (Cp1251 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:2.3.2:testCompile (default-testCompile) @ persistence ---
[WARNING] File encoding has not been set, using platform encoding Cp1251, i.e. build is platform dependent!
[INFO] Compiling 3 source files to D:\MyProjects\GitHub\Tournament\persistence\target\test-classes
[INFO] 
[INFO] --- maven-surefire-plugin:2.10:test (default-test) @ persistence ---
[INFO] Surefire report directory: D:\MyProjects\GitHub\Tournament\persistence\target\surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running com.taky.tournament.dao.PlayerRepositoryImplTest
Sep 30, 2012 5:01:34 PM org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [com/taky/tournament/dao/spring-test-dao.xml]
Sep 30, 2012 5:01:35 PM org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions
INFO: Loading XML bean definitions from class path resource [spring/spring-hibernate.xml]
Sep 30, 2012 5:01:35 PM org.springframework.context.support.AbstractApplicationContext prepareRefresh
INFO: Refreshing org.springframework.context.support.GenericApplicationContext@93a985: startup date [Sun Sep 30 17:01:35 EEST 2012]; root of context hierarchy
Sep 30, 2012 5:01:35 PM org.springframework.beans.factory.support.DefaultListableBeanFactory preInstantiateSingletons
INFO: Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@15b6382: defining beans [playerRepositoryImpl,tournamentRepositoryImpl,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,dataSource,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,hibernateSessionFactory,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
Sep 30, 2012 5:01:35 PM org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory initDatabase
INFO: Creating embedded database 'dataSource'
17:01:35.911 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1e5f73e
17:01:35.918 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1e5f73e
17:01:35.918 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1e5f73e
17:01:35.920 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@186c975
17:01:35.923 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1121bc1
17:01:35.924 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@f47d52
17:01:35.926 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1b34d17
17:01:35.927 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1b34d17
17:01:35.927 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1b34d17
17:01:35.929 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@119510f
17:01:35.929 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@119510f
17:01:35.929 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@119510f
17:01:35.933 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@db454
17:01:35.933 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@db454
17:01:35.933 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@db454
17:01:35.935 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@d8a715
17:01:35.935 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@d8a715
17:01:35.935 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@d8a715
17:01:35.937 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3496c9
17:01:35.937 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3496c9
17:01:35.937 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3496c9
17:01:35.940 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@bd5fa1
17:01:35.940 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@bd5fa1
17:01:35.940 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@bd5fa1
17:01:35.942 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@115a56d
17:01:35.942 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@115a56d
17:01:35.942 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@115a56d
17:01:35.945 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7bbdc6
17:01:35.945 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7bbdc6
17:01:35.947 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@19c47d5
17:01:35.947 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@19c47d5
17:01:35.948 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@16cdee6
17:01:35.948 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@16cdee6
17:01:35.950 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1b831da
17:01:35.950 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1b831da
17:01:35.953 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@443a94
17:01:35.954 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@443a94
17:01:35.956 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@ac70ab
17:01:35.957 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@ac70ab
17:01:35.960 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@30e1c0
17:01:35.960 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@30e1c0
17:01:35.960 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@30e1c0
17:01:35.961 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@abb9e4
17:01:35.963 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@16b6cdf
17:01:35.963 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@16b6cdf
17:01:35.963 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@16b6cdf
17:01:35.965 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@177cd4a
17:01:35.966 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@e28e2
17:01:35.967 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@e28e2
17:01:35.968 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@912008
17:01:35.968 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@912008
17:01:35.969 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@133a88b
17:01:35.970 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@133a88b
17:01:35.971 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@716387
17:01:35.971 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@716387
17:01:35.973 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@aedc96
17:01:35.973 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@aedc96
17:01:35.974 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@18fe417
17:01:35.975 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3600ab
17:01:35.977 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@12e91f5
17:01:35.977 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@12e91f5
17:01:35.978 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@12e91f5
17:01:35.979 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@a433d8
17:01:35.979 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@a433d8
17:01:35.979 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@a433d8
17:01:35.985 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@1072f13
17:01:35.987 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@18326b8
17:01:35.987 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@18326b8
17:01:35.987 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@18326b8
17:01:35.989 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@176742
17:01:35.989 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@176742
17:01:35.989 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@176742
17:01:35.990 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@edf7e9
17:01:35.993 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1955fe1
17:01:35.993 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1955fe1
17:01:35.994 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@159ed86
17:01:35.996 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@10bfee3
17:01:35.996 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@10bfee3
17:01:35.997 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@190973e
17:01:35.999 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@17585a5
17:01:36.003 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@15fcb67
17:01:36.004 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@15fcb67
17:01:36.004 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e8bd13
17:01:36.004 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d5320a
17:01:36.004 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1c8587f
17:01:36.004 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@29fbc9
17:01:36.005 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@517550
17:01:36.005 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1ed0790
17:01:36.005 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8b9a98
17:01:36.005 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@152a09f
17:01:36.030 [main] INFO  o.h.annotations.common.Version - Hibernate Commons Annotations 3.2.0.Final
17:01:36.038 [main] INFO  org.hibernate.cfg.Environment - Hibernate 3.6.0.Final
17:01:36.041 [main] INFO  org.hibernate.cfg.Environment - loaded properties from resource hibernate.properties: {hibernate.connection.autocommit=true, hibernate.cache.provider_class=org.hibernate.cache.NoCacheProvider, hibernate.dialect=org.hibernate.dialect.H2Dialect, hibernate.bytecode.use_reflection_optimizer=false, hibernate.hbm2ddl.auto=create, hibernate.transaction.flush_before_completion=true, hibernate.show.sql=true}
17:01:36.044 [main] INFO  org.hibernate.cfg.Environment - Bytecode provider name : javassist
17:01:36.048 [main] INFO  org.hibernate.cfg.Environment - using JDK 1.4 java.sql.Timestamp handling
17:01:36.183 [main] INFO  org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: com.taky.tournament.entity.Player
17:01:36.244 [main] INFO  o.h.cfg.annotations.EntityBinder - Bind entity com.taky.tournament.entity.Player on table Player
17:01:36.334 [main] INFO  org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: com.taky.tournament.entity.Tournament
17:01:36.334 [main] INFO  o.h.cfg.annotations.EntityBinder - Bind entity com.taky.tournament.entity.Tournament on table Tournament
17:01:36.365 [main] INFO  org.hibernate.cfg.Configuration - Hibernate Validator not found: ignoring
Sep 30, 2012 5:01:36 PM org.springframework.orm.hibernate3.LocalSessionFactoryBean buildSessionFactory
INFO: Building new Hibernate SessionFactory
17:01:36.373 [main] INFO  o.h.c.s.HibernateSearchEventListenerRegister - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
17:01:36.379 [main] INFO  o.h.c.ConnectionProviderFactory - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
17:01:36.662 [main] INFO  org.hibernate.cfg.SettingsFactory - Database ->
       name : H2
    version : 1.3.167 (2012-05-23)
      major : 1
      minor : 3
17:01:36.663 [main] INFO  org.hibernate.cfg.SettingsFactory - Driver ->
       name : H2 JDBC Driver
    version : 1.3.167 (2012-05-23)
      major : 1
      minor : 3
17:01:36.688 [main] INFO  org.hibernate.dialect.Dialect - Using dialect: org.hibernate.dialect.H2Dialect
17:01:36.707 [main] INFO  o.h.engine.jdbc.JdbcSupportLoader - Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
17:01:36.708 [main] INFO  o.h.t.TransactionFactoryFactory - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
17:01:36.709 [main] INFO  o.h.t.TransactionManagerLookupFactory - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
17:01:36.709 [main] INFO  org.hibernate.cfg.SettingsFactory - Automatic flush during beforeCompletion(): disabled
17:01:36.709 [main] INFO  org.hibernate.cfg.SettingsFactory - Automatic session close at end of transaction: disabled
17:01:36.710 [main] INFO  org.hibernate.cfg.SettingsFactory - JDBC batch size: 15
17:01:36.710 [main] INFO  org.hibernate.cfg.SettingsFactory - JDBC batch updates for versioned data: disabled
17:01:36.710 [main] INFO  org.hibernate.cfg.SettingsFactory - Scrollable result sets: enabled
17:01:36.710 [main] INFO  org.hibernate.cfg.SettingsFactory - JDBC3 getGeneratedKeys(): enabled
17:01:36.711 [main] INFO  org.hibernate.cfg.SettingsFactory - Connection release mode: auto
17:01:36.711 [main] INFO  org.hibernate.cfg.SettingsFactory - Default batch fetch size: 1
17:01:36.711 [main] INFO  org.hibernate.cfg.SettingsFactory - Generate SQL with comments: disabled
17:01:36.712 [main] INFO  org.hibernate.cfg.SettingsFactory - Order SQL updates by primary key: disabled
17:01:36.712 [main] INFO  org.hibernate.cfg.SettingsFactory - Order SQL inserts for batching: disabled
17:01:36.712 [main] INFO  org.hibernate.cfg.SettingsFactory - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
17:01:36.714 [main] INFO  o.h.h.ast.ASTQueryTranslatorFactory - Using ASTQueryTranslatorFactory
17:01:36.714 [main] INFO  org.hibernate.cfg.SettingsFactory - Query language substitutions: {}
17:01:36.714 [main] INFO  org.hibernate.cfg.SettingsFactory - JPA-QL strict compliance: disabled
17:01:36.714 [main] INFO  org.hibernate.cfg.SettingsFactory - Second-level cache: enabled
17:01:36.714 [main] INFO  org.hibernate.cfg.SettingsFactory - Query cache: disabled
17:01:36.714 [main] INFO  org.hibernate.cfg.SettingsFactory - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
17:01:36.715 [main] INFO  org.hibernate.cfg.SettingsFactory - Optimize cache for minimal puts: disabled
17:01:36.716 [main] INFO  org.hibernate.cfg.SettingsFactory - Structured second-level cache entries: disabled
17:01:36.721 [main] INFO  org.hibernate.cfg.SettingsFactory - Statistics: disabled
17:01:36.721 [main] INFO  org.hibernate.cfg.SettingsFactory - Deleted entity synthetic identifier rollback: disabled
17:01:36.721 [main] INFO  org.hibernate.cfg.SettingsFactory - Default entity-mode: pojo
17:01:36.721 [main] INFO  org.hibernate.cfg.SettingsFactory - Named query checking : enabled
17:01:36.721 [main] INFO  org.hibernate.cfg.SettingsFactory - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
17:01:36.748 [main] INFO  o.hibernate.impl.SessionFactoryImpl - building session factory
17:01:37.059 [main] INFO  o.h.impl.SessionFactoryObjectFactory - Not binding factory to JNDI, no JNDI name configured
Sep 30, 2012 5:01:37 PM org.springframework.orm.hibernate3.HibernateTransactionManager afterPropertiesSet
INFO: Using DataSource [org.springframework.jdbc.datasource.SimpleDriverDataSource@dd79e9] of Hibernate SessionFactory for HibernateTransactionManager
Sep 30, 2012 5:01:37 PM org.springframework.test.context.transaction.TransactionalTestExecutionListener startNewTransaction
INFO: Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@6f8d74]; rollback [true]
17:01:37.319 [main] WARN  o.h.util.JDBCExceptionReporter - SQL Error: 42102, SQLState: 42S02
17:01:37.319 [main] ERROR o.h.util.JDBCExceptionReporter - Table "PLAYER" not found; SQL statement:
insert into Player (PLAYER_ID, NAME) values (null, ?) [42102-167]
Sep 30, 2012 5:01:37 PM org.springframework.test.context.transaction.TransactionalTestExecutionListener endTransaction
INFO: Rolled back transaction after test execution for test context [[TestContext@71d5f9 testClass = PlayerRepositoryImplTest, testInstance = com.taky.tournament.dao.PlayerRepositoryImplTest@196fac5, testMethod = testInsert@AbstractRepositoryTest, testException = org.hibernate.exception.SQLGrammarException: could not insert: [com.taky.tournament.entity.Player], mergedContextConfiguration = [MergedContextConfiguration@129c248 testClass = PlayerRepositoryImplTest, locations = '{classpath:/com/taky/tournament/dao/spring-test-dao.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 3.284 sec <<< FAILURE!
Running com.taky.tournament.dao.TournamentRepositoryImplTest
Sep 30, 2012 5:01:37 PM org.springframework.test.context.transaction.TransactionalTestExecutionListener startNewTransaction
INFO: Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@6f8d74]; rollback [true]
17:01:37.361 [main] WARN  o.h.util.JDBCExceptionReporter - SQL Error: 42102, SQLState: 42S02
17:01:37.361 [main] ERROR o.h.util.JDBCExceptionReporter - Table "TOURNAMENT" not found; SQL statement:
insert into Tournament (TOURNAMENT_ID, NAME, tournamentEndDate, tournamentStartDate) values (null, ?, ?, ?) [42102-167]
Sep 30, 2012 5:01:37 PM org.springframework.test.context.transaction.TransactionalTestExecutionListener endTransaction
INFO: Rolled back transaction after test execution for test context [[TestContext@b1149d testClass = TournamentRepositoryImplTest, testInstance = com.taky.tournament.dao.TournamentRepositoryImplTest@1c0644a, testMethod = testInsert@AbstractRepositoryTest, testException = org.hibernate.exception.SQLGrammarException: could not insert: [com.taky.tournament.entity.Tournament], mergedContextConfiguration = [MergedContextConfiguration@1f8372b testClass = TournamentRepositoryImplTest, locations = '{classpath:/com/taky/tournament/dao/spring-test-dao.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.006 sec <<< FAILURE!
Sep 30, 2012 5:01:37 PM org.springframework.context.support.AbstractApplicationContext doClose
INFO: Closing org.springframework.context.support.GenericApplicationContext@93a985: startup date [Sun Sep 30 17:01:35 EEST 2012]; root of context hierarchy
Sep 30, 2012 5:01:37 PM org.springframework.beans.factory.support.DefaultSingletonBeanRegistry destroySingletons
INFO: Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@15b6382: defining beans [playerRepositoryImpl,tournamentRepositoryImpl,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,dataSource,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,hibernateSessionFactory,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
17:01:37.374 [Thread-2] INFO  o.hibernate.impl.SessionFactoryImpl - closing

Results :

Tests in error: 
  testInsert(com.taky.tournament.dao.PlayerRepositoryImplTest): could not insert: [com.taky.tournament.entity.Player]
  testInsert(com.taky.tournament.dao.TournamentRepositoryImplTest): could not insert: [com.taky.tournament.entity.Tournament]

Tests run: 2, Failures: 0, Errors: 2, Skipped: 0

[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] persistence ....................................... FAILURE [6.737s]
[INFO] service ........................................... SKIPPED
[INFO] web ............................................... SKIPPED
[INFO] tournament ........................................ SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 6.976s
[INFO] Finished at: Sun Sep 30 17:01:37 EEST 2012
[INFO] Final Memory: 16M/39M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.10:test (default-test) on project persistence: There are test failures.
[ERROR] 
[ERROR] Please refer to D:\MyProjects\GitHub\Tournament\persistence\target\surefire-reports for the individual test results.
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
